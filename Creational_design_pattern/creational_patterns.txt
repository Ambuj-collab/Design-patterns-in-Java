1) Creational design patterns deal with creating objects of classes.

2) And if you are newcomer to design pattern or if you are just starting your career, you may be wondering why we need a design pattern to create objects of a class. Can't we simply use new operator? Well, technically you have to use new operator in order to create objects in Java language. However, there are multiple additional requirements that are placed when we are doing a real life application development or project development. For example, your object may need multiple other objects before it can be created. There may be multiple steps that are needed before you can create an object, you may need to read some data from a file. You may need to query a URL to get some data, and from that you have to create your final object. So there are multiple steps there. Sometimes you may have a requirement that there should be only one object of your class in the entire application because that class may be representing something like a configuration. So you want only one object of that class available in your entire application from which a configuration can be read. So these are some of the problems that these creational design patterns try to solve.

3) Here is a list of creational design patterns that we are going to study:
	Builder
	Simple Factory
	Factory Method
	Prototype
	Singleton
	Abstract Factory
	Object Pool
